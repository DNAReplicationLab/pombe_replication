# ----------------------------------------------------------
# Copyright 2020-2021 Earlham Institute
# Written by Conrad Nieduszynski (conrad.nieduszynski@earlham.ac.uk)
#            and Sathish Thiyagarajan (sathish.thiyagarajan@earlham.ac.uk)
# This software is licensed under GPL-3.0.  You should have
# received a copy of the license with this software.  If
# not, please Email the author.
# ----------------------------------------------------------

# goal
# ====
# generate a list of all steps in a nascent read file generated by rDNA_detectSummary.py, and convert them to bed format

# usage
# =====
# python rDNA_nascentStepSummary.py path.to.nascent.summary.file
# example commands:
# python rDNA_nascentStepSummary.py nascent.txt                  # output is sent to stdout
# python rDNA_nascentStepSummary.py nascent.txt > outputFile.bed # output is sent to outputFile.bed

# input file
# ==========
# input file is tab-separated generated by rDNA_detectSummary.py and has twelve columns (with no header with column
# names):
# chr, start, end, read, [BrdU], strand, mapped length, highest BBT, largest step, start-end diff,
# coord_array, step_array
# NOTE: comments are allowed in the input file, and are indicated by a hash (#) at the start of the line.
# NOTE: coord_array and step_array are arrays of values, and are enclosed in square brackets
#       with values separated by spaces.
#       coord_array contains coordinate of each step and step_array contains the size of each step.
# NOTE: depending on the logic of the script that generated the input file, step may mean the absolute value of the
#       step size, or the step size itself.
# sample entry (don't assume this is real data, and we've replaced tabs with commas for readability):
# chrI, 89114, 96196, 48636fde-fb9d-482a-a02f-f979aebbe012, 0.414, +, 7082, 0.503, 0.105, 0.071, [93131], [1.0873492]

# output format
# =============
# output is sent to stdout, and can be redirected to a file.
# output is in bed 6+1 format i.e. seven tab-separated columns with no header:
# chr, start, end (= start + 1), read, step, strand, mapped length
# basically coord_array and step_array in the input file can be an array of values of equal length,
# and we want to output each value in one row in the start/end column and the step column respectively.

import sys
import numpy as np
import os

# check for correct number of arguments
if len(sys.argv) != 2:
    print("Usage: python rDNA_nascentStepSummary.py path.to.nascent.summary.file")
    print("Example: python rDNA_nascentStepSummary.py nascent.txt # output to stdout")
    print("Example: python rDNA_nascentStepSummary.py nascent.txt > output.txt # output to output.txt")
    print("Please refer to the comments in the script for more information")
    exit(1)

# check if input file exists
if not os.path.isfile(sys.argv[1]):
    print("Input file does not exist")
    exit(1)

# receive input parameters
inputFile = sys.argv[1]

mySTEPbuff = []

# import nascent summary data
f = open(inputFile, 'r')

for line in f:

    if line[0] == '#':
        continue
    else:
        splitLine = line.rstrip().split("\t")

        # ignore mitochondrial mapped reads
        if splitLine[0] == 'chrM':
            continue

        # ignore malformed lines
        if len(splitLine) < 12:
            continue

        # split coord and step arrays into individual values
        splitCoord = splitLine[10][1:-1].rstrip().split()
        splitStep = splitLine[11][1:-1].rstrip().split()

        # append each coord, step pair to the output buffer
        for coord, step in zip(splitCoord, splitStep):
            mySTEP = (splitLine[0], coord, int(coord) + 1, splitLine[3], step, splitLine[5], splitLine[6])
            mySTEPbuff.append(mySTEP)

# save data
np.savetxt(sys.stdout, np.array(mySTEPbuff), fmt='%s', delimiter='\t')
